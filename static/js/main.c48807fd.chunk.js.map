{"version":3,"sources":["@shared/utils/constants.js","@shared/utils/throwError.js","payments/PaymentReducer.js","payments/components/Card/CardShape.jsx","payments/utils/constants.js","payments/components/Card/CardInfo.jsx","payments/components/CardAddForm/inputInfos.js","payments/components/Card/Card.jsx","payments/components/Input/Input.jsx","payments/components/InputTitle/InputTitle.jsx","payments/components/Button/Button.jsx","payments/components/Header/Header.jsx","payments/components/Bank/Bank.jsx","payments/components/BankSelector/BankSelector.jsx","payments/components/Circle/Circle.jsx","payments/components/Modal/Modal.jsx","payments/components/ToolTip/QuestionIcon.jsx","payments/components/ToolTip/ToolTip.jsx","payments/components/InputBox/InputBox.jsx","payments/components/InputLabel/InputLabel.jsx","payments/components/InputContent/InputContent.jsx","payments/components/InputValidationMessage/InputValidationMessage.jsx","payments/hooks/useInputs.jsx","payments/components/CardAddForm/validator.js","payments/components/CardAddForm/CardAddForm.jsx","payments/components/CardConfirm/CardConfirm.jsx","payments/components/CardList/CardList.jsx","payments/Payments.jsx","App.jsx","index.jsx"],"names":["ERROR_TYPE","Object","freeze","VALIDATION","PAGE","CARD_ADD_FORM","Symbol","CARD_CONFIRM","CARD_LIST","throwError","message","type","error","Error","values","includes","movePage","page","String","payload","index","reducer","state","action","cardInfos","map","info","id","cardInfo","CardShape","backgroundColor","scale","onClick","isRegistered","children","className","classNames","role","tabIndex","onKeyUp","defaultProps","LENGTH","DISPLAYED_OWNER_NAME_MAX","CardInfo","name","bank","cardNumbers","ownerName","expirationDate","expirationMonth","expirationYear","number","length","slice","cardNumberInfos","minLength","maxLength","label","expirationDateInfos","placeholder","passwordInfos","Card","props","formattedCardNumbers","repeat","Input","isValid","required","onChange","value","inputmode","htmlFor","inputMode","InputTitle","Button","Header","hasBackButton","onBackButtonClick","title","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","Bank","useState","isHovered","setIsHovered","handleBankClick","onMouseEnter","onMouseLeave","bankInfos","BankSelector","Circle","color","cx","cy","r","$modalRoot","document","querySelector","createDefaultContainer","$container","createElement","Modal","useEffect","append","remove","bind","ReactDOM","createPortal","propTypes","PropTypes","element","isRequired","QuestionIcon","ToolTip","isVisible","InputBox","InputLabel","InputContent","InputValidationMessage","useInput","initialValue","validate","setValue","touched","setTouched","setError","handleValueChange","event","target","useInputs","initialValues","setValues","handleValuesChange","validateCardNumbers","joinedCardNumbers","join","match","validateExpirationDate","month","year","currentYear","Date","getFullYear","Number","validateOwnerName","validateSecurityCode","code","validatePasswords","passwords","joinedPasswords","initialCardNumberValues","fromEntries","initialExpirationDateValues","initialPasswordValues","CardAddForm","addCardInfo","formErrorMessage","setFormErrorMessage","isBankSelectorVisible","setBankSelectorVisible","isToolTipVisible","setToolTipVisible","setBank","setBackgroundColor","cardNumberValues","handleCardNumberValuesChange","cardNumberError","cardNumberTouched","expirationDateValues","handleExpirationDateValuesChange","expirationDateError","expirationDateTouched","handleOwnerNameChange","ownerNameError","ownerNameTouched","securityCode","handleSecurityCodeChange","securityCodeError","securityCodeTouched","passwordValues","handlePasswordsChange","passwordError","passwordTouched","bindCardInfo","aria-describedby","noValidate","onSubmit","preventDefault","find","Boolean","validateForm","Fragment","bgColor","bankName","CardConfirm","editCardInfo","nickname","handleNicknameChange","CardList","onAddCardClick","initialState","Payments","useReducer","paymentsReducer","dispatch","newCardInfo","pop","App","render","StrictMode"],"mappings":"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","file":"static/js/main.c48807fd.chunk.js","sourcesContent":["// TODO: Deep freeze\n\nexport const ERROR_TYPE = Object.freeze({\n  VALIDATION: \"validation\",\n});\n\nexport const PAGE = Object.freeze({\n  CARD_ADD_FORM: Symbol(\"cardAddForm\"),\n  CARD_CONFIRM: Symbol(\"cardConfirm\"),\n  CARD_LIST: Symbol(\"cardList\"),\n});\n","import { ERROR_TYPE } from \"./constants\";\n\nconst throwError = (message, type) => {\n  const error = new Error(message);\n\n  if (!Object.values(ERROR_TYPE).includes(type)) {\n    throw new Error(\"Invalid error type: \", type);\n  }\n\n  error.type = type;\n\n  throw error;\n};\n\nexport default throwError;\n","import { PAGE, throwError } from \"../@shared/utils\";\n\nexport const movePage = page => {\n  if (!Object.values(PAGE).includes(page)) {\n    throwError(`Invalid page: ${String(page)}`);\n  }\n\n  return { type: \"page/move\", payload: page };\n};\n\nlet index = 0;\nexport const addNewCardInfo = newCardInfo => {\n  index += 1;\n\n  return { type: \"cardInfo/add\", payload: { id: index, ...newCardInfo } };\n};\n\nexport const editCardInfo = ({ id, cardInfo }) => ({ type: \"cardInfo/edit\", payload: { id, cardInfo } });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"page/move\":\n      return { ...state, page: action.payload };\n    case \"cardInfo/add\":\n      return {\n        ...state,\n        cardInfos: [...state.cardInfos, action.payload],\n      };\n    case \"cardInfo/edit\":\n      return {\n        ...state,\n        cardInfos: state.cardInfos.map(info => (info.id === action.payload.id ? action.payload.cardInfo : info)),\n      };\n    default:\n      return throwError(`Invalid action type: ${action.type}`);\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst CardShape = ({ backgroundColor, scale, onClick, isRegistered, children }) => (\n  <div\n    className={classNames(\n      \"relative p-3 w-52 h-32 rounded-md shadow-md cursor-pointer transform\",\n      backgroundColor,\n      scale\n    )}\n    role=\"button\"\n    tabIndex=\"0\"\n    onKeyUp={onClick}\n    onClick={onClick}\n  >\n    {!isRegistered && (\n      <>\n        <div className=\"absolute left-1/2 top-1/2 flex items-center justify-center w-6 h-6 bg-gray-600 rounded-full opacity-50 transform -translate-x-1/2 -translate-y-1/2\" />\n        <span className=\"absolute left-1/2 top-1/2 text-gray-800 transform -translate-x-1/2 -translate-y-1/2\">+</span>\n      </>\n    )}\n    {children}\n  </div>\n);\n\nCardShape.propTypes = {\n  isRegistered: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  scale: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.element,\n};\n\nCardShape.defaultProps = {\n  isRegistered: false,\n  backgroundColor: \"bg-custom-gray-200\",\n  scale: \"scale-100\",\n  onClick: null,\n  children: null,\n};\n\nexport default CardShape;\n","/* eslint-disable import/prefer-default-export */\nexport const LENGTH = Object.freeze({\n  DISPLAYED_OWNER_NAME_MAX: 10,\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LENGTH } from \"../../utils\";\n\nconst formatOwnerName = name =>\n  name.length <= LENGTH.DISPLAYED_OWNER_NAME_MAX ? name : `${name.slice(0, LENGTH.DISPLAYED_OWNER_NAME_MAX)}...`;\n\nconst CardInfo = ({ bank, cardNumbers, ownerName, expirationDate }) => {\n  const [expirationMonth, expirationYear] = expirationDate ?? [\"MM\", \"YY\"];\n\n  return (\n    <>\n      <div className=\"mb-4 h-4 text-custom-darkgray text-xs\">{bank}</div>\n      <div className=\"mb-2 w-10 h-6.5 bg-custom-gold rounded\" />\n      <div className=\"flex flex-col items-center text-custom-gray-300\">\n        <div className=\"flex h-5 text-sm space-x-2.5\">\n          {cardNumbers.map((number, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <span key={index}> {number}</span>\n          ))}\n        </div>\n        <div className=\"flex justify-between w-11/12 text-sm\">\n          <span>{formatOwnerName(ownerName) || \"NAME\"}</span>\n          <div className=\"flex\">\n            <span>{expirationMonth}</span>\n            <span>{expirationMonth ? \"/\" : null}</span>\n            <span>{expirationYear}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nCardInfo.propTypes = {\n  bank: PropTypes.string.isRequired,\n  cardNumbers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  ownerName: PropTypes.string.isRequired,\n  expirationDate: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CardInfo;\n","export const cardNumberInfos = [\n  { id: \"card-number-info-0\", type: \"text\", minLength: \"4\", maxLength: \"4\", label: \"첫번째 카드번호 입력창\" },\n  { id: \"card-number-info-1\", type: \"text\", minLength: \"4\", maxLength: \"4\", label: \"두번째 카드번호 입력창\" },\n  { id: \"card-number-info-2\", type: \"password\", minLength: \"4\", maxLength: \"4\", label: \"세번째 카드번호 입력창\" },\n  { id: \"card-number-info-3\", type: \"password\", minLength: \"3\", maxLength: \"4\", label: \"네번째 카드번호 입력창\" },\n];\n\nexport const expirationDateInfos = [\n  { id: \"expiration-date-month\", placeholder: \"MM\", label: \"카드 만료일(월)\" },\n  { id: \"expiration-date-year\", placeholder: \"YY\", label: \"카드 만료일(연)\" },\n];\n\nexport const passwordInfos = [\n  { id: \"password-input-0\", label: \"카드 비밀번호 첫번째 자리수\" },\n  { id: \"password-input-1\", label: \"카드 비밀번호 두번째 자리수\" },\n];\n","import React from \"react\";\nimport CardShape from \"./CardShape\";\nimport CardInfo from \"./CardInfo\";\nimport { LENGTH } from \"../../utils\";\nimport { cardNumberInfos } from \"../CardAddForm/inputInfos\";\n\nconst formatOwnerName = name =>\n  name.length <= LENGTH.DISPLAYED_OWNER_NAME_MAX ? name : `${name.slice(0, LENGTH.DISPLAYED_OWNER_NAME_MAX)}...`;\n\nconst Card = props => {\n  const { scale, isRegistered, bank, backgroundColor, cardNumbers, expirationDate, ownerName, onClick } = props;\n\n  const formattedCardNumbers = cardNumberInfos.map(({ type }, index) =>\n    type === \"password\" ? \"*\".repeat(cardNumbers[index]?.length) : cardNumbers[index]\n  );\n\n  return (\n    <CardShape {...{ backgroundColor, scale, isRegistered, onClick }}>\n      <CardInfo\n        {...{ bank, cardNumbers: formattedCardNumbers, ownerName: formatOwnerName(ownerName), expirationDate }}\n      />\n    </CardShape>\n  );\n};\n\nCard.propTypes = {\n  ...CardShape.propTypes,\n  ...CardInfo.propTypes,\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Input = props => {\n  const {\n    label,\n    isValid,\n    className,\n    id,\n    type,\n    minLength,\n    maxLength,\n    required,\n    placeholder,\n    onChange,\n    value,\n    name,\n    inputmode,\n  } = props;\n\n  return (\n    <>\n      <label className=\"only:w-full\" htmlFor={id}>\n        <span className=\"sr-only\">{label}</span>\n        <input\n          className={classNames(\n            \"placeholder-center p-3 h-11 text-custom-mint text-lg font-medium bg-custom-gray-100 rounded-md\",\n            !isValid && \"outline-none ring-2 ring-rose-400\",\n            className\n          )}\n          {...{\n            id,\n            type,\n            minLength,\n            maxLength,\n            required,\n            placeholder,\n            onChange,\n            value,\n            name,\n            inputMode: inputmode,\n          }}\n        />\n      </label>\n    </>\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  minLength: PropTypes.string.isRequired,\n  maxLength: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  isValid: PropTypes.bool,\n  type: PropTypes.string,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool,\n  placeholder: PropTypes.string,\n  inputmode: PropTypes.string,\n};\n\nInput.defaultProps = {\n  className: \"\",\n  isValid: true,\n  type: \"text\",\n  name: Input.id,\n  required: false,\n  placeholder: \"\",\n  inputmode: \"text\",\n};\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputTitle = ({ children }) => <span className=\"text-custom-gray-300 text-xs font-medium\">{children}</span>;\n\nInputTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default InputTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Button = props => {\n  const { children, type, className, onClick } = props;\n\n  return (\n    <button\n      type={type === \"submit\" ? \"submit\" : \"button\"}\n      className={classNames(\"w-max text-custom-mint text-sm font-bold\", className)}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: \"button\",\n  className: \"\",\n  onClick: null,\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Header = ({ hasBackButton, onBackButtonClick, title }) => (\n  <header className=\"w-full\">\n    <div className=\"flex items-center mb-8 w-25\">\n      <button\n        type=\"button\"\n        onClick={onBackButtonClick}\n        className={classNames(\"bg-opacity-0\", \"mr-4\", !hasBackButton && \"invisible\")}\n      >\n        <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8.30424 1L1.36474 8.78658L9.15132 15.7261\" stroke=\"#525252\" strokeWidth=\"1.5\" />\n        </svg>\n      </button>\n      <span className=\"text-base font-medium\">{title}</span>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  hasBackButton: PropTypes.bool,\n  onBackButtonClick: PropTypes.func,\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  hasBackButton: false,\n  onBackButtonClick: null,\n  title: \"\",\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Bank = ({ backgroundColor, name, onClick }) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleBankClick = () => onClick(backgroundColor, name);\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        \"flex flex-col items-center justify-center cursor-pointer select-none\",\n        isHovered && \"outline-none\"\n      )}\n      onKeyUp={handleBankClick}\n      onClick={handleBankClick}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div\n        className={classNames(\"mb-2.5 w-9 h-9 rounded-full\", backgroundColor, isHovered && \"bg-opacity-70 shadow-lg\")}\n      />\n      <div className={classNames(\"text-custom-gray-300 text-xs \", isHovered ? \"font-semibold\" : \"font-medium\")}>\n        {name}\n      </div>\n    </button>\n  );\n};\n\nBank.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Bank;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Bank from \"../Bank/Bank\";\n\nconst bankInfos = [\n  { backgroundColor: \"bg-custom-red\", name: \"국민\" },\n  { backgroundColor: \"bg-custom-blue\", name: \"삼성\" },\n  { backgroundColor: \"bg-custom-green\", name: \"농협\" },\n  { backgroundColor: \"bg-custom-purple\", name: \"BC\" },\n  { backgroundColor: \"bg-custom-gradient-mint\", name: \"배민\" },\n  { backgroundColor: \"bg-custom-pink\", name: \"신한\" },\n  { backgroundColor: \"bg-custom-orange\", name: \"제주\" },\n  { backgroundColor: \"bg-custom-yellow\", name: \"카카오\" },\n];\n\nconst BankSelector = ({ onClick }) => (\n  <div className=\"grid-cols-4\tw-full grid mx-auto p-6 max-w-lg h-56 bg-custom-white rounded-t-md\">\n    {bankInfos.map(({ backgroundColor, name }) => (\n      <Bank key={name} {...{ backgroundColor, name, onClick }} />\n    ))}\n  </div>\n);\n\nBankSelector.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BankSelector;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Circle = ({ width, height, color }) => (\n  <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx={width / 2} cy={height / 2} r={width / 2} fill={color} />\n  </svg>\n);\n\nCircle.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n\nCircle.defaultProps = {\n  color: \"#04C09E\",\n};\n\nexport default Circle;\n","import { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst $modalRoot = document.querySelector(\"#modal-root\");\n\nconst createDefaultContainer = () => {\n  const $container = document.createElement(\"div\");\n  $container.className = \"absolute inset-0 w-full flex justify-end flex-col bg-black bg-opacity-50\";\n\n  return $container;\n};\n\nconst Modal = ({ children }) => {\n  const [$container] = useState(createDefaultContainer);\n\n  useEffect(() => {\n    $modalRoot.append($container);\n\n    return $container.remove.bind($container);\n  });\n\n  return ReactDOM.createPortal(children, $container);\n};\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst QuestionIcon = ({ onClick }) => (\n  <svg\n    width=\"27\"\n    height=\"27\"\n    className=\"flex-shrink-0 ml-3 cursor-pointer\"\n    viewBox=\"0 0 27 27\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    onClick={onClick}\n  >\n    <circle cx=\"13.5\" cy=\"13.5\" r=\"13\" fill=\"white\" stroke=\"#BABABA\" />\n    <path\n      d=\"M12.5547 16.8203C12.5547 15.9544 12.6621 15.2643 12.877 14.75C13.0918 14.2357 13.515 13.6725 14.1465 13.0605C14.7845 12.4421 15.1882 12.0026 15.3574 11.7422C15.6178 11.3451 15.748 10.9154 15.748 10.4531C15.748 9.84115 15.5951 9.37565 15.2891 9.05664C14.9896 8.73112 14.5469 8.56836 13.9609 8.56836C13.401 8.56836 12.9486 8.72786 12.6035 9.04688C12.265 9.35938 12.0957 9.78581 12.0957 10.3262H9.72266C9.73568 9.17383 10.1263 8.26237 10.8945 7.5918C11.6693 6.92122 12.6914 6.58594 13.9609 6.58594C15.2695 6.58594 16.2884 6.91797 17.0176 7.58203C17.7533 8.24609 18.1211 9.17383 18.1211 10.3652C18.1211 11.4264 17.6263 12.4714 16.6367 13.5L15.4355 14.6816C15.0059 15.1699 14.7845 15.8828 14.7715 16.8203H12.5547ZM12.3887 19.8574C12.3887 19.4733 12.5091 19.1641 12.75 18.9297C12.9909 18.6888 13.3164 18.5684 13.7266 18.5684C14.1432 18.5684 14.472 18.6921 14.7129 18.9395C14.9538 19.1803 15.0742 19.4863 15.0742 19.8574C15.0742 20.2155 14.957 20.515 14.7227 20.7559C14.4883 20.9967 14.1562 21.1172 13.7266 21.1172C13.2969 21.1172 12.9648 20.9967 12.7305 20.7559C12.5026 20.515 12.3887 20.2155 12.3887 19.8574Z\"\n      fill=\"#969696\"\n    />\n  </svg>\n);\n\nQuestionIcon.propTypes = {\n  onClick: PropTypes.func,\n};\n\nQuestionIcon.defaultProps = {\n  onClick: null,\n};\n\nexport default QuestionIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ToolTip = ({ isVisible, children }) =>\n  isVisible && (\n    <div className=\"flex items-center h-11\">\n      <span className=\"left-arrow w-0 h-0 border-8 border-custom-darkgray\" />\n      <span className=\"p-2 text-custom-white text-xs bg-custom-darkgray rounded-lg\">{children}</span>\n    </div>\n  );\n\nToolTip.propTypes = {\n  isVisible: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nToolTip.defaultProps = {\n  isVisible: false,\n};\n\nexport default ToolTip;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputBox = ({ children }) => <div className=\"flex flex-col mb-2 w-full\">{children}</div>;\n\nInputBox.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default InputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputLabel = ({ children }) => <div className=\"flex items-center justify-between mb-2 h-6\">{children}</div>;\n\nInputLabel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default InputLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputContent = ({ children }) => <div className=\"flex items-center w-full space-x-2\">{children}</div>;\n\nInputContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\nexport default InputContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputValidationMessage = ({ id, children }) => (\n  <p id={id} className=\"flex py-2 text-rose-600 text-xs\">\n    {children}\n  </p>\n);\n\nInputValidationMessage.propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default InputValidationMessage;\n","import { useEffect, useState } from \"react\";\n\nexport const useInput = (initialValue, { validate } = {}) => {\n  const [value, setValue] = useState(initialValue);\n  const [touched, setTouched] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (validate && typeof validate === \"function\") {\n      setError(validate(value));\n    }\n  }, [value, validate]);\n\n  const handleValueChange = event => {\n    setValue(event.target.value);\n\n    if (!touched) {\n      setTouched(true);\n    }\n  };\n\n  return [value, handleValueChange, { error, touched }];\n};\n\nexport const useInputs = (initialValues, { validate } = {}) => {\n  const [values, setValues] = useState(initialValues);\n  const [touched, setTouched] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (validate && typeof validate === \"function\") {\n      setError(validate(values));\n    }\n  }, [values, validate]);\n\n  const handleValuesChange = event => {\n    const { name, value } = event.target;\n\n    setValues({ ...values, [name]: value });\n\n    if (!touched) {\n      setTouched(true);\n    }\n  };\n\n  return [values, handleValuesChange, { error, touched }];\n};\n","export const validateCardNumbers = values => {\n  const joinedCardNumbers = Object.values(values).join(\"\");\n\n  if (![15, 16].includes(joinedCardNumbers.length)) {\n    return \"카드번호는 15~16자로 구성되어야 합니다.\";\n  }\n\n  if (joinedCardNumbers.match(/[\\D]/)) {\n    return \"카드번호는 0-9 로만 구성되어야 합니다.\";\n  }\n\n  return \"\";\n};\n\nexport const validateExpirationDate = values => {\n  const month = values[\"expiration-date-month\"];\n  const year = values[\"expiration-date-year\"];\n  const currentYear = new Date().getFullYear() - 2000;\n\n  if (month.length !== 2) {\n    return \"만료일(월)은 2글자로 구성되어야 합니다.(ex: 01, 02, ... 12)\";\n  }\n\n  if (Number(month) < 1 || Number(month) > 12) {\n    return `만료일(월)이 유효하지 않습니다.`;\n  }\n\n  if (year.length !== 2) {\n    return \"만료일(년)은 2글자로 구성되어야 합니다.(ex: 21, 22, ... 25)\";\n  }\n\n  if (Number(year) < currentYear || Number(year) > currentYear + 5) {\n    return `만료일(년)은 현재로부터 5년이내만 입력할 수 있습니다.`;\n  }\n\n  return \"\";\n};\n\nexport const validateOwnerName = name => {\n  if (name.match(/[^가-힣|A-Z|\\s]/)) {\n    return \"카드 소유자 이름은 한글, 알파벳, 공백문자로 이루어져야 합니다.\";\n  }\n\n  if (name.length > 30) {\n    return \"카드 소유자 이름은 30자 이내여야 합니다.\";\n  }\n\n  return \"\";\n};\n\nexport const validateSecurityCode = code => {\n  if (code.length < 3 || code.length > 4) {\n    return \"보안코드는 3글자 또는 4글자 여야 합니다.\";\n  }\n\n  if (code.match(/[\\D]/)) {\n    return \"보안코드는 한글, 알파벳, 공백문자로 이루어져야 합니다.\";\n  }\n\n  return \"\";\n};\n\nexport const validatePasswords = passwords => {\n  const joinedPasswords = Object.values(passwords).join(\"\");\n\n  if (joinedPasswords.length !== 2) {\n    return \"카드 비밀번호를 2글자 모두 입력해주세요.\";\n  }\n\n  if (joinedPasswords.match(/[\\D]/)) {\n    return \"카드 비밀번호는 숫자로만 이루어져야 합니다.\";\n  }\n\n  return \"\";\n};\n","/* eslint-disable no-console */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Card from \"../Card/Card\";\nimport Input from \"../Input/Input\";\nimport InputTitle from \"../InputTitle/InputTitle\";\nimport Button from \"../Button/Button\";\nimport Header from \"../Header/Header\";\nimport BankSelector from \"../BankSelector/BankSelector\";\nimport Circle from \"../Circle/Circle\";\nimport Modal from \"../Modal/Modal\";\nimport QuestionIcon from \"../ToolTip/QuestionIcon\";\nimport ToolTip from \"../ToolTip/ToolTip\";\nimport InputBox from \"../InputBox/InputBox\";\nimport InputLabel from \"../InputLabel/InputLabel\";\nimport InputContent from \"../InputContent/InputContent\";\nimport InputValidationMessage from \"../InputValidationMessage/InputValidationMessage\";\nimport { useInputs, useInput } from \"../../hooks/useInputs\";\nimport { cardNumberInfos, expirationDateInfos, passwordInfos } from \"./inputInfos\";\nimport {\n  validateCardNumbers,\n  validateExpirationDate,\n  validateOwnerName,\n  validateSecurityCode,\n  validatePasswords,\n} from \"./validator\";\n\nconst initialCardNumberValues = Object.fromEntries(cardNumberInfos.map(({ id }) => [id, \"\"]));\n\nconst initialExpirationDateValues = Object.fromEntries(expirationDateInfos.map(({ id }) => [id, \"\"]));\n\nconst initialPasswordValues = Object.fromEntries(passwordInfos.map(({ id }) => [id, \"\"]));\n\nconst CardAddForm = ({ addCardInfo, onBackButtonClick }) => {\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [isBankSelectorVisible, setBankSelectorVisible] = useState(false);\n  const [isToolTipVisible, setToolTipVisible] = useState(false);\n\n  const [bank, setBank] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"\");\n\n  const [\n    cardNumberValues,\n    handleCardNumberValuesChange,\n    { error: cardNumberError, touched: cardNumberTouched },\n  ] = useInputs(initialCardNumberValues, { validate: validateCardNumbers });\n\n  const [\n    expirationDateValues,\n    handleExpirationDateValuesChange,\n    { error: expirationDateError, touched: expirationDateTouched },\n  ] = useInputs(initialExpirationDateValues, { validate: validateExpirationDate });\n\n  const [ownerName, handleOwnerNameChange, { error: ownerNameError, touched: ownerNameTouched }] = useInput(\"\", {\n    validate: validateOwnerName,\n  });\n\n  const [\n    securityCode,\n    handleSecurityCodeChange,\n    { error: securityCodeError, touched: securityCodeTouched },\n  ] = useInput(\"\", { validate: validateSecurityCode });\n\n  const [\n    passwordValues,\n    handlePasswordsChange,\n    { error: passwordError, touched: passwordTouched },\n  ] = useInputs(initialPasswordValues, { validate: validatePasswords });\n\n  const validateForm = () => {\n    if (bank === \"\" || backgroundColor === \"\") {\n      return \"카드회사를 선택해주세요.\";\n    }\n\n    return [cardNumberError, expirationDateError, ownerNameError, securityCodeError, passwordError].find(Boolean) ?? \"\";\n  };\n\n  const handleCardClick = () => {\n    setBankSelectorVisible(!isBankSelectorVisible);\n  };\n\n  const handleBankClick = (bgColor, bankName) => {\n    setBankSelectorVisible(false);\n    setBackgroundColor(bgColor);\n    setBank(bankName);\n  };\n\n  const handleToolTipClick = () => setToolTipVisible(!isToolTipVisible);\n\n  const bindCardInfo = () => {\n    const cardNumbers = cardNumberInfos.map(({ id }) => cardNumberValues[id]);\n\n    const expirationDate = expirationDateInfos.map(({ id }) => expirationDateValues[id]);\n\n    const passwords = passwordInfos.map(({ id }) => passwordValues[id]);\n\n    return { bank, backgroundColor, cardNumbers, expirationDate, ownerName, securityCode, passwords };\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const error = validateForm();\n\n    if (error) {\n      setFormErrorMessage(error);\n      return;\n    }\n\n    addCardInfo(bindCardInfo());\n  };\n\n  return (\n    <>\n      <Header hasBackButton title=\"카드 추가\" onBackButtonClick={onBackButtonClick} />\n      <form\n        className=\"flex flex-col justify-between w-full h-full\"\n        aria-describedby=\"form-error\"\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <div>\n          <div className=\"flex justify-center mb-4 w-full\">\n            <Card\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...bindCardInfo()}\n              isRegistered={false}\n              onClick={handleCardClick}\n            />\n          </div>\n\n          <InputBox>\n            <InputLabel>\n              <InputTitle>카드 번호</InputTitle>\n            </InputLabel>\n\n            <InputContent>\n              <div\n                className={cx(\n                  \"flex items-center justify-around w-full text-custom-mint text-lg font-medium bg-custom-gray-100 rounded-md\",\n                  cardNumberTouched && cardNumberError && \"ring-2 ring-rose-400\"\n                )}\n                aria-describedby=\"card-number-error\"\n              >\n                {cardNumberInfos.map(({ id, type, minLength, maxLength, label }, index) => (\n                  <React.Fragment key={id}>\n                    {index > 0 && <span>-</span>}\n                    <Input\n                      id={id}\n                      type={type}\n                      label={label}\n                      className=\"appearance-textfield w-full outline-none\"\n                      name={id}\n                      minLength={minLength}\n                      maxLength={maxLength}\n                      value={cardNumberValues[id]}\n                      onChange={handleCardNumberValuesChange}\n                      inputmode=\"numeric\"\n                    />\n                  </React.Fragment>\n                ))}\n              </div>\n            </InputContent>\n            <InputValidationMessage id=\"card-number-error\">\n              {cardNumberTouched ? cardNumberError : \"\"}\n            </InputValidationMessage>\n          </InputBox>\n\n          <InputBox>\n            <InputLabel>\n              <InputTitle>만료일</InputTitle>\n            </InputLabel>\n\n            <InputContent>\n              <div\n                className={cx(\n                  \"text-custom-mint text-lg font-medium bg-custom-gray-100 rounded-md\",\n                  expirationDateTouched && expirationDateError && \"ring-2 ring-rose-400\"\n                )}\n                aria-describedby=\"expiration-date-error\"\n              >\n                {expirationDateInfos.map(({ id, placeholder, label }, index) => (\n                  <React.Fragment key={id}>\n                    {index > 0 && <span>/</span>}\n                    <Input\n                      id={id}\n                      type=\"text\"\n                      placeholder={placeholder}\n                      className=\"appearance-textfield w-14 outline-none\"\n                      minLength=\"2\"\n                      maxLength=\"2\"\n                      inputmode=\"numeric\"\n                      name={id}\n                      value={expirationDateValues[id]}\n                      onChange={handleExpirationDateValuesChange}\n                      label={label}\n                    />\n                  </React.Fragment>\n                ))}\n              </div>\n            </InputContent>\n\n            <InputValidationMessage id=\"expiration-date-error\">\n              {expirationDateTouched ? expirationDateError : \"\"}\n            </InputValidationMessage>\n          </InputBox>\n\n          <InputBox>\n            <InputLabel>\n              <InputTitle>카드 소유자 이름(선택)</InputTitle>\n              <span className=\"text-custom-gray-300 text-xs font-medium\">{ownerName.length}/30</span>\n            </InputLabel>\n            <InputContent>\n              <Input\n                id=\"owner-name-input\"\n                type=\"text\"\n                placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n                className={cx(\"w-full outline-none\", ownerNameTouched && ownerNameError && \"ring-2 ring-rose-400\")}\n                value={ownerName}\n                onChange={handleOwnerNameChange}\n                label=\"카드 소유자 이름 입력란\"\n                minLength=\"0\"\n                maxLength=\"30\"\n                aria-describedby=\"owner-name-error\"\n              />\n            </InputContent>\n            <InputValidationMessage id=\"owner-name-error\">\n              {ownerNameTouched ? ownerNameError : \"\"}\n            </InputValidationMessage>\n          </InputBox>\n\n          <InputBox>\n            <InputLabel>\n              <InputTitle>보안코드(CVC/CVV)</InputTitle>\n            </InputLabel>\n            <InputContent>\n              <Input\n                id=\"security-code-input\"\n                type=\"password\"\n                className={cx(\"w-20 outline-none\", securityCodeTouched && securityCodeError && \"ring-2 ring-rose-400\")}\n                minLength=\"3\"\n                maxLength=\"4\"\n                value={securityCode}\n                onChange={handleSecurityCodeChange}\n                inputmode=\"numeric\"\n                label=\"보안 코드 입력란\"\n                aria-describedby=\"security-code-error\"\n              />\n              <QuestionIcon onClick={handleToolTipClick} />\n              <ToolTip isVisible={isToolTipVisible}>카드 뒷면 서명란 끝의 3~4자리 숫자를 입력해주세요.</ToolTip>\n            </InputContent>\n\n            <InputValidationMessage id=\"security-code-error\">\n              {securityCodeTouched ? securityCodeError : \"\"}\n            </InputValidationMessage>\n          </InputBox>\n\n          <InputBox>\n            <InputLabel>\n              <InputTitle>카드 비밀번호</InputTitle>\n            </InputLabel>\n            <InputContent>\n              <section className=\"flex items-center w-full space-x-2\" aria-describedby=\"password-error\">\n                {passwordInfos.map(({ id, label }) => (\n                  <Input\n                    key={id}\n                    id={id}\n                    type=\"password\"\n                    className={cx(\n                      \"w-10 text-center outline-none\",\n                      passwordTouched && passwordError && \"ring-2 ring-rose-400\"\n                    )}\n                    minLength=\"1\"\n                    maxLength=\"1\"\n                    inputmode=\"numeric\"\n                    name={id}\n                    value={passwordValues[id]}\n                    label={label}\n                    onChange={handlePasswordsChange}\n                  />\n                ))}\n                <div className=\"flex justify-center w-10\">\n                  <Circle width=\"5\" height=\"5\" />\n                </div>\n                <div className=\"flex justify-center w-10\">\n                  <Circle width=\"5\" height=\"5\" />\n                </div>\n              </section>\n            </InputContent>\n            <InputValidationMessage id=\"password-error\">{passwordTouched ? passwordError : \"\"}</InputValidationMessage>\n          </InputBox>\n        </div>\n\n        <div className=\"flex items-center justify-between h-10\">\n          <InputValidationMessage id=\"form-error\">\n            <span className=\"text-center text-sm\">{formErrorMessage}</span>\n          </InputValidationMessage>\n          <Button type=\"submit\" className=\"px-2 py-1 rounded focus:outline-none focus:ring-blue-400 focus:ring-2\">\n            다음\n          </Button>\n        </div>\n      </form>\n\n      {isBankSelectorVisible && (\n        <Modal>\n          <BankSelector onClick={handleBankClick} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nCardAddForm.propTypes = {\n  addCardInfo: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n};\n\nexport default CardAddForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../Card/Card\";\nimport Button from \"../Button/Button\";\nimport Header from \"../Header/Header\";\nimport { useInput } from \"../../hooks/useInputs\";\n\nconst CardConfirm = ({ cardInfo, editCardInfo }) => {\n  const { id, bank, backgroundColor, cardNumbers, expirationDate, ownerName, onClick } = cardInfo;\n\n  const [nickname, handleNicknameChange] = useInput(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    editCardInfo({ id, cardInfo: { ...cardInfo, nickname } });\n  };\n\n  return (\n    <>\n      <Header hasBackButton={false} />\n      <form onSubmit={handleSubmit}>\n        <section className=\"flex flex-col justify-center w-full h-160\">\n          <div>\n            <div className=\"flex flex-col items-center w-full h-full\">\n              <h1 className=\"mb-24 text-2xl\">카드등록이 완료되었습니다.</h1>\n              <Card\n                isRegistered\n                scale=\"scale-150\"\n                {...{ bank, backgroundColor, cardNumbers, expirationDate, ownerName, onClick }}\n              />\n\n              <input\n                className=\"mt-16 text-center text-custom-darkgray text-lg font-normal border-b-2 border-custom-gray-250 focus:outline-none\"\n                value={nickname}\n                onChange={handleNicknameChange}\n              />\n            </div>\n          </div>\n        </section>\n        <div className=\"flex items-center justify-end w-full h-10\">\n          <Button type=\"submit\">확인</Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nCardConfirm.propTypes = {\n  cardInfo: PropTypes.shape(Card.propTypes).isRequired,\n  editCardInfo: PropTypes.func.isRequired,\n};\n\nexport default CardConfirm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../Header/Header\";\nimport Card from \"../Card/Card\";\nimport CardShape from \"../Card/CardShape\";\n\nconst CardList = ({ cardInfos, onAddCardClick }) => (\n  <>\n    <Header title=\"보유카드\" />\n    <div className=\"flex flex-col items-center\">\n      {cardInfos.map(({ id, bank, backgroundColor, cardNumbers, expirationDate, ownerName, nickname }) => (\n        <React.Fragment key={id}>\n          <Card isRegistered {...{ bank, backgroundColor, cardNumbers, expirationDate, ownerName }} />\n          <p className=\"mb-6 mt-3 text-sm font-medium\">{nickname}</p>\n        </React.Fragment>\n      ))}\n      <CardShape onClick={onAddCardClick} />\n    </div>\n  </>\n);\n\nCardList.propTypes = {\n  cardInfos: PropTypes.arrayOf(PropTypes.shape(Card.propTypes)).isRequired,\n  onAddCardClick: PropTypes.func.isRequired,\n};\n\nexport default CardList;\n","import React, { useReducer } from \"react\";\nimport { throwError, PAGE } from \"../@shared/utils\";\nimport paymentsReducer, { addNewCardInfo, editCardInfo, movePage } from \"./PaymentReducer\";\nimport CardAddForm from \"./components/CardAddForm/CardAddForm\";\nimport CardConfirm from \"./components/CardConfirm/CardConfirm\";\nimport CardList from \"./components/CardList/CardList\";\n\nconst initialState = {\n  page: PAGE.CARD_LIST,\n  cardInfos: [],\n};\n\nconst Payments = () => {\n  const [state, dispatch] = useReducer(paymentsReducer, initialState);\n\n  const addCardInfo = cardInfo => {\n    dispatch(addNewCardInfo(cardInfo));\n    dispatch(movePage(PAGE.CARD_CONFIRM));\n  };\n\n  const editNewCardInfo = ({ id, cardInfo }) => {\n    dispatch(editCardInfo({ id, cardInfo }));\n    dispatch(movePage(PAGE.CARD_LIST));\n  };\n\n  const moveToCardListPage = () => {\n    dispatch(movePage(PAGE.CARD_LIST));\n  };\n\n  const moveToCardAddForm = () => {\n    dispatch(movePage(PAGE.CARD_ADD_FORM));\n  };\n\n  const { page, cardInfos } = state;\n\n  switch (page) {\n    case PAGE.CARD_ADD_FORM:\n      return <CardAddForm addCardInfo={addCardInfo} onBackButtonClick={moveToCardListPage} />;\n    case PAGE.CARD_CONFIRM:\n      return <CardConfirm cardInfo={[...cardInfos].pop()} editCardInfo={editNewCardInfo} />;\n    case PAGE.CARD_LIST:\n      return <CardList cardInfos={cardInfos} onAddCardClick={moveToCardAddForm} />;\n    default:\n      return throwError(`Invalid Page: ${String(page)}`);\n  }\n};\n\nexport default Payments;\n","import React from \"react\";\nimport Payments from \"./payments/Payments\";\n\nconst App = () => (\n  <div className=\"min-w-sm relative flex flex-col mx-auto p-5 h-full\">\n    <Payments />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#app-root\")\n);\n"],"sourceRoot":""}